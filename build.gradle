buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/maven' } // 添加这个仓库
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
}

apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group_id

base {
    archivesName = "$mod_name-$minecraft_version"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println("Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}")

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        client {
            workingDirectory('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "$mod_id" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "$mod_id" {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "$mod_id" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                "$mod_id" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDirs 'src/generated/resources/' }

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
        content { includeGroup "thedarkcolour" }
    }

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"

    implementation "thedarkcolour:kotlinforforge:$kff_version"

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    runtimeOnly fg.deobf("curse.maven:bookshelf-228525:5423987")
    runtimeOnly fg.deobf("curse.maven:enchantment-descriptions-250419:5855251")
    runtimeOnly fg.deobf("curse.maven:jade-324717:6106101")
//    runtimeOnly fg.deobf("curse.maven:jei-238222:6075247")
//    runtimeOnly fg.deobf("curse.maven:mmmmmmmmmmmm-225738:6237015") // 训练人偶
//    runtimeOnly fg.deobf("curse.maven:selene-499980:6323374") // MoonLight Lib
//    runtimeOnly fileTree("runtimeMods")
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
                         forge_version    : forge_version, forge_version_range: forge_version_range,
                         mod_id           : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                         mod_authors      : mod_authors, mod_description: mod_description]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}

jar {
    manifest {
        attributes(['Specification-Title'     : mod_id,
                    'Specification-Vendor'    : mod_authors,
                    'Specification-Version'   : "1",
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_authors,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "MixinConfigs"            : "so_many_enchantment.json"])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}